services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: cryptovault-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: cryptovault
      POSTGRES_USER: cryptovault
      POSTGRES_PASSWORD: cryptovault_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cryptovault -d cryptovault"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cryptovault-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cryptovault-backend
    restart: unless-stopped
    environment:
      FLASK_ENV: development
      DATABASE_URL: postgresql://cryptovault:cryptovault_password@db:5432/cryptovault
      SECRET_KEY: dev-secret-key-change-in-production
      JWT_SECRET_KEY: dev-jwt-secret-change-in-production
      CORS_ORIGINS: http://localhost:5173,http://frontend:5173
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend:/app
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - cryptovault-network

  # Frontend (React + Vite)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cryptovault-frontend
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - VITE_API_BASE_URL=http://localhost:5000/api
    depends_on:
      - backend
    networks:
      - cryptovault-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5173 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  cryptovault-network:
    driver: bridge
